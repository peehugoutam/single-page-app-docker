name: Deploy to EC2 without Docker Hub

on:
  push:
    branches:
      - main # Triggers the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Build the Docker image
      - name: Build Docker image
        run: docker build -t single-page-app-docker:latest .

      # Step 3: Save Docker image as a .tar file
      - name: Save Docker image as .tar
        run: docker save single-page-app-docker:latest -o single-page-app-docker.tar

      # Step 4: Transfer the Docker image to EC2 using SCP
      - name: Transfer Docker image to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${EC2_KEY}" > key.pem
          chmod 400 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem single-page-app-docker.tar ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/single-page-app-docker.tar

      # Step 5: SSH into EC2 to load and run the Docker image
      - name: SSH to EC2 and deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${EC2_USER}@${EC2_HOST} << 'EOF'
            # Load the Docker image
            docker load -i /home/${EC2_USER}/single-page-app-docker.tar
            
            # Stop and remove any existing container
            docker stop single-page-app || true
            docker rm single-page-app || true

            # Run the container
            docker run -d --name single-page-app -p 80:3000 single-page-app-docker:latest
          EOF
        shell: bash
